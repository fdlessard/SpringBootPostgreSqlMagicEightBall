<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>io.fdlessard.codebites.magiceightball</groupId>
    <artifactId>magiceightball</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>SpringBootPostgreSqlMagicEightBall</name>
    <description>Demo project for Spring Boot</description>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.1.0.RELEASE</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <java.version>1.8</java.version>
        <eclipselink.version>2.7.0</eclipselink.version>
        <junit-jupiter-api.version>5.3.1</junit-jupiter-api.version>
        <mockito-core.version>2.21.0</mockito-core.version>
        <docker-maven-plugin.version>0.27.2</docker-maven-plugin.version>
        <cf-maven-plugin.version>1.0.4</cf-maven-plugin.version>
        <postgresql.version>42.2.5</postgresql.version>
        <spring-cloud-cloudfoundry-connector.version>2.0.1.RELEASE</spring-cloud-cloudfoundry-connector.version>
        <spring-cloud-spring-service-connector.version>2.0.1.RELEASE</spring-cloud-spring-service-connector.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-devtools</artifactId>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
            <exclusions>
                <exclusion>
                    <artifactId>hibernate-entitymanager</artifactId>
                    <groupId>org.hibernate</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.eclipse.persistence</groupId>
            <artifactId>org.eclipse.persistence.jpa</artifactId>
            <version>${eclipselink.version}</version>
        </dependency>
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <version>${postgresql.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-amqp</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito-core.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-junit-jupiter</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit-jupiter-api.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit-jupiter-api.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-spring-service-connector</artifactId>
            <version>${spring-cloud-spring-service-connector.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-cloudfoundry-connector</artifactId>
            <version>${spring-cloud-cloudfoundry-connector.version}</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>build-info</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
                <configuration>
                    <includes>
                        <include>**/*Test.java</include>
                    </includes>
                    <excludes>
                        <exclude>**/*It.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <includes>
                        <include>**/*It.java</include>
                    </includes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <id>add-it-source</id>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${project.basedir}/src/it/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-resource</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${project.basedir}/src/it/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker-maven-plugin.version}</version>
                <configuration>
                    <registry>registry.hub.docker.com</registry>
                    <authConfig>
                        <username></username>
                        <password></password>
                    </authConfig>
                    <useColor>true</useColor>
                    <verbose>true</verbose>
                    <logDate>default</logDate>
                    <autoPull>true</autoPull>
                 <!--   <dockerHost>https://localhost:2376</dockerHost>-->
<!--
                    <certPath>${user.home}/.docker/machine/certs/</certPath>
-->
                    <images>
                        <!--                        <image>
                                                    <name>fdlessard/magic-eight-ball-image:latest</name>
                                                    <build>
                                                        <dockerFile>${project.basedir}/Dockerfile</dockerFile>
                                                    </build>
                                                    <run>
                                                        <ports>
                                                            <port>18080:8080</port>
                                                        </ports>
                                                    </run>
                                                </image>-->
                        <image>
                            <name>rabbitmq:management</name>
                            <run>
                                <ports>
                                    <port>1883:1883</port>
                                    <port>5672:5672</port>
                                    <port>15672:15672</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://localhost:15672</url>
                                        <method>GET</method>
                                        <status>200..399</status>
                                    </http>
                                    <time>50000</time>
                                </wait>
                                <log>
                                    <prefix>rabbitmq::</prefix>
                                    <color>magenta</color>
                                </log>
                            </run>
                        </image>
                        <image>
                            <name>postgres:9.6-alpine</name>
                            <run>
                                <ports>
                                    <port>5432:5432</port>
                                </ports>
                                <log>
                                    <prefix>postgres::</prefix>
                                    <color>magenta</color>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
                <!-- Hooking into the lifecycle -->
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.cloudfoundry</groupId>
                <artifactId>cf-maven-plugin</artifactId>
                <version>${cf-maven-plugin.version}</version>
                <configuration>
                    <server>sap-cloud-foundry</server>
                    <target>https://api.cf.us10.hana.ondemand.com</target>
                    <org>P1036236trial_trial</org>
                    <space>dev</space>
                    <appname>magiceightball</appname>
                    <url>magiceightball.cfapps.us10.hana.ondemand.com</url>
                    <memory>1024</memory>
                    <diskQuota>1024</diskQuota>
                    <username></username>
                    <password></password>
                    <!--
                                        <healthCheckTimeout>60</healthCheckTimeout>
                    -->
                </configuration>
            </plugin>

        </plugins>
    </build>
</project>
